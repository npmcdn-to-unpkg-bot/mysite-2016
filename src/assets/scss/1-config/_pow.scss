//  Pow settings
// ============================================================================

$pow-namespace: 'layout' !default; // Prefix namespace for grid
$pow-base-columns: 12 !default; // Based on a twelve column system
$pow-delimiter: '__' !default; // Delimiter for block and element
$pow-slug: 'cell' !default; // Grid element name
$pow-modifier: '--' !default; // Delimiter for modifiers

$pow-namespace: 'grid';

$pow-active-columns: (
    2,
    3,
    4,
    6,
    8
) !default; // Number value equals to the number of columns to stretch over, add/remove as appropriate

$pow-breakpoints: (
    xs: 400px,
    sm: 600px,
    md: 800px,
    lg: 1000px,
    xl: 1200px
) !default; // Responsive breakpoints, add/remove as appropriate

// Enable/disable layouts
$pow-enable-responsive:             true !default;
$pow-enable-layout-gutter:          true !default; // Margin between layout cells
$pow-enable-utility-x-start:        false !default; // Justify element position to start on x-axle
$pow-enable-utility-x-center:       true !default; // Justify element position to center on x-axle
$pow-enable-utility-x-end:          false !default; // Justify element position to end on x-axle
$pow-enable-utility-x-between:      false !default; // Justify element position to have space between cells on x-axle
$pow-enable-utility-x-around:       false !default; // Justify element position to have space between cells on x-axle
$pow-enable-utility-y-stretch:      false !default; // Align element position to stretch on y-axle
$pow-enable-utility-y-start:        false !default; // Align element position to start on y-axle
$pow-enable-utility-y-center:       true !default; // Align element position to center on y-axle
$pow-enable-utility-y-end:          false !default; // Align element position to end on y-axle
$pow-enable-utility-y-baseline:     false !default; // Align element position to baseline on y-axle



//  Logic
// ============================================================================

@mixin create-columns($columns, $base-columns, $breakpoint-alias: null) {
    // Loop columns
    @each $number in $columns {
        // Create class name
        $class-name: #{$breakpoint-alias}#{$pow-namespace}#{$pow-delimiter}#{$pow-slug}-#{$number};

        // Set width value
        $width-value: percentage(1 / $base-columns * $number);

        // Create class
        .#{$class-name} {
            flex: 0 0 $width-value;
        }
    }
}

// Set gutter between layout cells
@mixin gutter($i) {
    $unit: 1px;
    padding-right: $i * $unit;
    padding-left: $i * $unit;
}

// Reset gutter outside layout cells
@mixin reset-gutter($i) {
    $unit: 1px;
    margin-right: -$i * $unit;
    margin-left: -$i * $unit;
}



/*  Grid layout
============================================================================ */

.#{$pow-namespace} {
    display: block; // Display block in old browsers when flexbox not supported
    display: flex;
    flex-wrap: wrap;
    padding: 0;
    margin: 0;
}

.#{$pow-namespace}#{$pow-delimiter}#{$pow-slug} {
    position: relative;
    padding: 0;
    margin: 0;
    width: 100%; // Use normal width in old browser when flexbox not supported
}

@if $pow-enable-layout-gutter {
    $i: 20;
    .#{$pow-namespace}#{$pow-modifier}gutter {
        @include reset-gutter($i);

        > .#{$pow-namespace}#{$pow-delimiter}#{$pow-slug} {
            @include gutter($i);
        }
    }
}



/*  Grid system
============================================================================ */

// Loop active columns
@include create-columns($pow-active-columns, $pow-base-columns);

// If responsive flag enabled, loop breakpoint widths
@if $pow-enable-responsive {
    @each $alias, $query in $pow-breakpoints {
        // Create each media query
        @media (min-width: #{$query}) {
            @include create-columns($pow-active-columns, $pow-base-columns, #{$alias}-);
        }
    }
}



/*  Utility system
============================================================================ */

@if $pow-enable-utility-x-start {
    .u-x-start {
        justify-content: flex-start; // Initial flexbox value
    }
}

@if $pow-enable-utility-x-center {
    .u-x-center {
        justify-content: center;
    }
}

@if $pow-enable-utility-x-end {
    .u-x-end {
        justify-content: flex-end;
    }
}

@if $pow-enable-utility-x-between {
    .u-x-between {
        justify-content: space-between;
    }
}

@if $pow-enable-utility-x-around {
    .u-x-around {
        justify-content: space-around;
    }
}

@if $pow-enable-utility-y-stretch {
    .u-y-stretch {
        align-items: stretch; // Initial flexbox value
    }
}

@if $pow-enable-utility-y-start {
    .u-y-start {
        align-items: flex-start;
    }
}

@if $pow-enable-utility-y-center {
    .u-y-center {
        align-items: center;
    }
}

@if $pow-enable-utility-y-end {
    .u-y-end {
        align-items: flex-end;
    }
}

@if $pow-enable-utility-y-baseline {
    .u-y-baseline {
        align-items: baseline;
    }
}
