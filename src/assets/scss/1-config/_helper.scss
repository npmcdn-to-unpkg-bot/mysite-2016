/**
 * Clearfix
 */
%clearfix {

    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin position($position: absolute, $left: 50%, $top: 50%) {
    position: $position;
    top: $top;
    left: $left;
    transform: translate(-#{$top}, -#{$left});

    @if $top == center {
        top: 50%;
    }
    @if $left == center {
        left: 50%;
    }

}
.center {
    text-align: center;
}
.sm-center {
    @media screen and (min-width: $sm) {
        text-align: center;
    }
}

.text-right {
    text-align: right;
}

// Shadow
@mixin box-shadow($x:0, $y:1px, $z:2px, $color:rgba(#000, 0.2)) {

    @if type-of($x) == 'color' {
        box-shadow: 0 1px 2px $x;

    } @else {
        box-shadow: $x $y $z $color;
    }

}

/* Component: Media Queries
============================================================================ */
@mixin media-query($size, $option: min) {
    @media screen and (#{$option}-width: $size) {
        @content;
    }
}

/**
 * Wrapper
 */
%wrapper {
    margin-right: auto;
    margin-left: auto;
    padding-right: $spacing-unit;
    padding-left: $spacing-unit;

    @include media-query($md) {
        padding-right: $spacing-unit / 2;
        padding-left: $spacing-unit / 2;
    }
}
// Sass wrapper
@mixin wrapper($width) {
    max-width: calc(#{$width} - (#{$spacing-unit} * 2));
    @extend %wrapper;
    @extend %clearfix;

    @include media-query($md) {
        max-width: calc(#{$width} - (#{$spacing-unit}));
    }
}
// Class wrapper
.wrapper {
    @include wrapper($lg);
}
.wrapper-full {
    @include wrapper(100%);
}
.wrapper-no-padding {
    padding-right: 0;
    padding-left: 0;
}

@each $name, $size in $sizes {
    .wrapper-#{$name} {
        @include wrapper($size);
    }
}

